==2480== Memcheck, a memory error detector
==2480== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2480== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2480== Command: ./lab2
==2480== 
Please enter an integer 1
Please enter an integer 2
Please enter an integer 3
Please enter an integer 4
Please enter an integer 5

Please enter the name of the movies input file Please enter the name of the input file ./input/movies.txt
1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 1

Int: 5
Int: 4
Int: 3
Int: 2
Int: 1

1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 2

Please enter an integer 6

1) Print the list - Word
2) Add First - Word
3) Add Last - Word
4) Sort - Word
5) Remove First - Word
6) Remove Item - Word
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 1

Int: 6
Int: 5
Int: 4
Int: 3
Int: 2
Int: 1

1) Print the list - Word
2) Add First - Word
3) Add Last - Word
4) Sort - Word
5) Remove First - Word
6) Remove Item - Word
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 4

1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 1

Int: 1
Int: 2
Int: 3
Int: 4
Int: 5
Int: 6

1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 5

1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 1

Int: 2
Int: 3
Int: 4
Int: 5
Int: 6

1) Print the list - MyInt
2) Add First - MyInt
3) Add Last - MyInt
4) Sort - MyInt
5) Remove First - MyInt
6) Remove Item - MyInt
============================
7) Print the list - Movie
8) Add First - Movie
9) Add Last - Movie
10) Remove Last - Movie
11) Remove Item - Movie
12) Quit
Choice --> 12


Program Ended
==2480== 
==2480== HEAP SUMMARY:
==2480==     in use at exit: 0 bytes in 0 blocks
==2480==   total heap usage: 43 allocs, 43 frees, 7,802 bytes allocated
==2480== 
==2480== All heap blocks were freed -- no leaks are possible
==2480== 
==2480== For counts of detected and suppressed errors, rerun with: -v
==2480== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

